- name: Create grafana provisioning dirs
  ansible.builtin.file:
    name: "/opt/grafana/provisioning/{{ item }}"
    state: directory
  loop:
    - dashboards
    - datasources

- name: Deploy datasources provisioning
  ansible.builtin.template:
    src: ../templates/datasources.yaml.j2
    dest: /opt/grafana/provisioning/datasources/datasources.yaml
  notify: Restart grafana container
  no_log: true

- name: Deploy dashboards provisioning
  ansible.builtin.template:
    src: ../templates/dashboards.yaml.j2
    dest: /opt/grafana/provisioning/dashboards/dashboards.yaml
  notify: Restart grafana container

- name: Deploy dashboard JSONs
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /opt/grafana/provisioning/dashboards/
  with_items:
    - ../files/main.json
    - ../files/syslog.json
    - ../files/backups.json
    - ../files/mysql.json
  notify: Restart grafana container

- name: Deploy grafana config
  vars:
    grafana_host: "{{ hostvars[groups['grafana'][0]]['ansible_host'] }}"
    modified_port: "{{ (hostvars[groups['grafana'][0]]['ansible_port'] // 100) * 100 + 80 }}"
  ansible.builtin.template:
    src: ../templates/grafana.ini.j2
    dest: /opt/grafana/grafana.ini
  no_log: true
  notify: Restart grafana container

- name: Download grafana docker container
  community.docker.docker_container:
    image: grafana/grafana
    name: grafana
    published_ports: '{{ grafana_port }}:3000'
    volumes: /opt/grafana:/etc/grafana

- name: Start agama
  community.docker.docker_container:
    name: grafana
    state: started
