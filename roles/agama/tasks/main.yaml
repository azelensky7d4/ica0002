- name: Create /opt/agama directory
  ansible.builtin.file:
    path: /opt/agama
    state: directory

- name: Download files
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
  loop:
    - { url: "https://raw.githubusercontent.com/hudolejev/agama/master/agama.py", dest: "/opt/agama/agama.py" }
    - { url: "https://raw.githubusercontent.com/hudolejev/agama/refs/heads/master/Dockerfile", dest: "/opt/agama/Dockerfile" }

- name: Build agama container
  community.docker.docker_image:
    name: agama
    source: build
    build:
      path: /opt/agama

- name: Start agama containers
  community.docker.docker_container:
    image: agama
    name: "agama_{{ item }}"
    state: started
    restart_policy: "always"
    published_ports: "{{ agama_port + item }}:8000"
    env:
      AGAMA_DATABASE_URI: mysql+pymysql://{{ mysql_user }}:{{ mysql_password }}@{{ mysql_host }}/{{ mysql_database }}
  no_log: true
  loop: "{{ range(0, agama_container_count) | list }}"

- name: Gather facts for DNS master
  ansible.builtin.setup:
    gather_subset: all
  delegate_to: "{{ groups['dns_masters'][0] }}"
  run_once: true

- name: Add CNAME record to DNS master
  community.general.nsupdate:
    server: "{{ hostvars[groups['dns_masters'][0]]['ansible_default_ipv4']['address'] }}"
    key_name: "nsupdate.key"
    key_secret: "{{ nsupdate_key }}"
    key_algorithm: "hmac-sha256"
    zone: "{{ domain_name }}"
    record: "{{ item.alias }}"
    type: CNAME
    value: "{{ item.target }}"
    state: present
  loop:
    - { alias: "www-1", target: "{{ groups['web_servers'][0] }}" }
    - { alias: "www-2", target: "{{ groups['web_servers'][1] }}" }
